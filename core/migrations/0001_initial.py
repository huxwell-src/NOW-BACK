# Generated by Django 4.2.6 on 2023-10-28 22:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("id_user", models.AutoField(primary_key=True, serialize=False)),
                ("rut", models.CharField(max_length=12, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("apellido", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=100)),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("Alumno", "Alumno"),
                            ("Profesor", "Profesor"),
                            ("Bodeguero", "Bodeguero"),
                            ("Administrador", "Administrador"),
                        ],
                        max_length=15,
                    ),
                ),
                ("curso", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Carrera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Producto",
            fields=[
                ("id_producto", models.AutoField(primary_key=True, serialize=False)),
                ("nombre", models.CharField(max_length=100)),
                ("stock", models.DecimalField(decimal_places=2, max_digits=10)),
                ("medida_stock", models.CharField(max_length=20)),
                ("descripcion", models.TextField()),
                ("carrera", models.ManyToManyField(blank=True, to="core.carrera")),
            ],
        ),
        migrations.CreateModel(
            name="ProductoSolicitado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cantidad", models.PositiveIntegerField(default=1)),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.producto"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Solicitud",
            fields=[
                ("id_solicitud", models.AutoField(primary_key=True, serialize=False)),
                ("fecha_creacion", models.DateField(auto_now_add=True)),
                ("fecha_entrega", models.DateField(blank=True, null=True)),
                ("fecha_devolucion", models.DateField(blank=True, null=True)),
                ("estado", models.CharField(default="en revisi√≥n", max_length=20)),
                ("aprobacion", models.BooleanField(default=True)),
                (
                    "companeros",
                    models.ManyToManyField(
                        blank=True,
                        related_name="solicitudes_companero",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "productos",
                    models.ManyToManyField(
                        blank=True,
                        through="core.ProductoSolicitado",
                        to="core.producto",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="productosolicitado",
            name="solicitud",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.solicitud"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="carrera",
            field=models.ManyToManyField(blank=True, to="core.carrera"),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
